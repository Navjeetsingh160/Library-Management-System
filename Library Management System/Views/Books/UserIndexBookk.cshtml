@* @model Library_Management_System.DTO.TransactionDTO

@{
    ViewData["Title"] = "Add New Book";
}

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add New Book</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
            font-family: Arial, sans-serif;
        }

        .form-container {
            max-width: 600px;
            margin: 50px auto;
            padding: 20px;
            background-color: #ffffff;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
        }

        h1 {
            text-align: center;
            margin-bottom: 20px;
            color: #343a40;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

        .btn-secondary {
            background-color: #6c757d;
            border-color: #6c757d;
        }
    </style>
</head>
<body>

    <div class="form-container">
        <h1>Book Issue</h1>
        <form asp-action="UserIndexBookk" method="post" id="bookForm">
            <div class="mb-3">
                <label for="Title" class="form-label">Book Name</label>
                <input type="text" class="form-control" id="Title" name="Title" value="@Model?.BookName" />
                <div class="invalid-feedback">Please provide a valid title.</div>
            </div>
            <div class="mb-3">
                <label for="Author" class="form-label">Student Name</label>
                <input type="text" class="form-control" id="Author" name="Author" value="@Model?.StudentName" />
                <div class="invalid-feedback">Please provide a valid author name.</div>
            </div>
            <div class="mb-3">
                <label for="IssueDate" class="form-label">Book Issue Date</label>
                <input type="date" class="form-control" id="IssueDate" name="IssueDate" value="@Model?.ReturnDate.ToString("yyyy-MM-dd")" />
                <div class="invalid-feedback">Please provide a valid issue date.</div>
            </div>
            <div class="mb-3">
                <label for="Quantity" class="form-label">Quantity</label>
                <input type="number" class="form-control" id="Quantity" name="Quantity" value="@Model?.Quantity" />
                <div class="invalid-feedback">Please provide a valid quantity.</div>
            </div>

            <div class="d-flex justify-content-between">
                <button type="submit" class="btn btn-primary">Save</button>
                <a href="@Url.Action("IndexIssueBook", "Books")" class="btn btn-secondary">
                    <i class="bi bi-x-circle"></i> Cancel
                </a>
            </div>
        </form>
    </div>

    <!-- Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById('bookForm').addEventListener('submit', function (event) {
            let isValid = true;

            // Title validation
            const title = document.getElementById('Title');
            if (title.value.trim() === '') {
                title.classList.add('is-invalid');
                isValid = false;
            } else {
                title.classList.remove('is-invalid');
            }

            // Author validation
            const author = document.getElementById('Author');
            if (author.value.trim() === '') {
                author.classList.add('is-invalid');
                isValid = false;
            } else {
                author.classList.remove('is-invalid');
            }

            // ISBN validation
            const isbn = document.getElementById('ISBN');
            if (isbn.value.trim() === '') {
                isbn.classList.add('is-invalid');
                isValid = false;
            } else {
                isbn.classList.remove('is-invalid');
            }

            // Quantity validation
            const quantity = document.getElementById('Quantity');
            if (quantity.value.trim() === '' || isNaN(quantity.value) || quantity.value <= 0) {
                quantity.classList.add('is-invalid');
                isValid = false;
            } else {
                quantity.classList.remove('is-invalid');
            }

            if (!isValid) {
                event.preventDefault();
                event.stopPropagation();
            }
        });

        // Automatically remove error when user types valid input
        document.querySelectorAll('.form-control').forEach(input => {
            input.addEventListener('input', function () {
                if (this.value.trim() !== '') {
                    this.classList.remove('is-invalid');
                }
            });
        });
    </script>
</body>
</html>
 *@


                <h2>kkfii</h2>